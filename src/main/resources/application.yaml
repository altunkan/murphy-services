server:
  servlet:
    context-path: /murphy

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/murphy
    username: murphy
    password: a8n7e9l5!
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          batch_size: 100
        format_sql: true
        generate_statistics: false
        order_inserts: true
        order_updates: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 192216634132-anqih1rhi1r5pul2qbt8dk1qs0q8mdin.apps.googleusercontent.com
            clientSecret: RH7kNFJc57t8lPeB1crFnZ32
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  auth:
    tokenSecret: KZh"PGMwC)j68t:K
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8080/murphy/user/me
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect